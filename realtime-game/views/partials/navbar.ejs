<nav class="navbar">
  <div class="navbar-header">
    <div class="navbar-logo" style="display:flex; align-items:center; gap:.5rem;">
      <% if (user) { %>
        <a href="/profile" class="nav-avatar-link" title="View Profile">
          <img
            src="<%= avatarUrl %>"
            alt="avatar"
            class="nav-avatar <%= isDefaultAvatar ? 'avatar--default' : '' %>"
            style="width:32px;height:32px;border-radius:50%;object-fit:cover;"
          />
        </a>
      <% } %>

      <% if (typeof points !== 'undefined') { %>
        <span class="user-points">
          <%= user %> : <%= points %> points
          <span class="online-status">üü¢ Online: <span id="onlineCount"><%= online %></span></span>
        </span>
      <% } else if (typeof online !== 'undefined') { %>
        <span class="online-status">üü¢ Online: <span id="onlineCount"><%= online %></span></span>
      <% } else { %>
        MyApp
      <% } %>

       <button id="musicToggle" class="music-btn" aria-label="Toggle background music" aria-pressed="false" title="Music">
      üîà
        </button>
       <audio id="bgm" src="/audio/GuildsTheme.wav" loop preload="auto"></audio>

    </div>

    <!-- Center title link (doesn't affect burger) -->
    <a href="/index" class="navbar-center-title">‚öîÔ∏è Guilds</a>

    <button class="navbar-toggle" id="burger">&#9776;</button>
  </div>

  <ul class="navbar-links" id="nav-links">
    <% if (user) { %>
      <li><a href="/index">Home</a></li>
      <li><a href="/events">Events</a></li>
      <li><a href="/challenges">Challenges</a></li>
      <li><a href="/guild-chat">Guild Chat</a></li>
      <li><a href="/leaderboard">Leaderboard</a></li>
      <li><a href="/profile">Profile</a></li>
      <% if (role === 'admin' || role === 'manager') { %>
        <li><a href="/admin">Admin</a></li>
      <% } %>
      <li><a href="/help">Help</a></li>
      <li><a href="/logout">Logout</a></li>
    <% } else { %>
      <li><a href="/login.html">Log In</a></li>
    <% } %>
  </ul>

  <!-- Minimal CSS for centered title -->
  <style>
    .navbar-header { position: relative; }
    .navbar-center-title{
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      top: 50%;
      transform: translate(-50%, -50%);
      font-weight: 800;
      letter-spacing: .03em;
      text-decoration: none;
      color: #fff;
      padding: .2rem .6rem;
      border-radius: 10px;
      transition: color .15s ease, text-shadow .2s ease, background .15s ease;
      white-space: nowrap;
    }
    .navbar-center-title:hover{
      color: #dcd2ff;
      text-shadow: 0 0 10px rgba(110,56,255,.7);
      background: rgba(110,56,255,.12);
    }
    /* Ensure it stays visible on mobile without blocking burger */
    @media (max-width: 980px){
      .navbar-center-title{ font-size: 1.05rem; }
    }
  </style>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Apply dark mode site-wide
      if (localStorage.getItem('darkMode') === 'enabled') {
        document.body.classList.add('dark-mode');
      }

      const burger = document.getElementById('burger');
      const navLinks = document.getElementById('nav-links');

      // Ensure collapsed on load
      if (navLinks) navLinks.classList.remove('show');

      if (burger && navLinks) {
        burger.addEventListener('click', () => {
          navLinks.classList.toggle('show');
        });

        // Auto-close when switching to desktop to avoid "always open" issue
        window.addEventListener('resize', () => {
          if (window.innerWidth > 980) navLinks.classList.remove('show');
        });
      }

      // Online counter
      const socket = io();
      socket.on("updateOnline", (count) => {
        const onlineEl = document.getElementById("onlineCount");
        if (onlineEl) onlineEl.textContent = count;
      });
    });
  </script>

  <script>
  // existing socket + burger code stays...

  (function () {
    const audio = document.getElementById('bgm');
    const btn   = document.getElementById('musicToggle');
    if (!audio || !btn) return;

    const saved = localStorage.getItem('bgm') || 'off';
    let isOn = (saved === 'on');

    function updateUI() {
      btn.textContent = isOn ? 'üîä' : 'üîà';
      btn.setAttribute('aria-pressed', isOn);
    }
    function tryPlay() {
      audio.volume = 0.35;
      const p = audio.play();
      if (p && p.catch) p.catch(() => { /* autoplay might be blocked until a click */ });
    }
    function setOn(v) {
      isOn = v;
      localStorage.setItem('bgm', v ? 'on' : 'off');
      updateUI();
      if (isOn) tryPlay(); else audio.pause();
    }

    btn.addEventListener('click', () => setOn(!isOn));
    updateUI();

    // If previously ON, start on first user interaction to satisfy autoplay rules
    if (isOn) {
      const kick = () => { tryPlay(); window.removeEventListener('pointerdown', kick); };
      window.addEventListener('pointerdown', kick, { once: true });
    }
  })();
</script>

<style>
  /* optional tiny style so it looks neat */
  .music-btn {
    margin-left: .5rem;
    font-size: 1rem;
    line-height: 1;
    border: 1px solid var(--panel-br, rgba(0,0,0,.08));
    background: var(--pill, #f7f7f7);
    color: inherit;
    padding: .25rem .5rem;
    border-radius: 8px;
    cursor: pointer;
  }
  body.dark-mode .music-btn { background: rgba(255,255,255,.08); }
</style>

</nav>
